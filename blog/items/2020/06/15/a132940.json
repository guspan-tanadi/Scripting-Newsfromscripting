{
    "text": "The <a href=\"https://github.com/scripting/Scripting-News/issues/177\">consensus</a> from yesterday's <a href=\"http://scripting.com/2020/06/14/144017.html?title=javascriptPromisesVsCallbacks\">query</a> is that adding promises to JavaScript wasn't much of a gain. Some people find promises more readable. There are some problems that are unwieldy with callbacks that are simpler with promises. There are already packages that have cast aside callbacks and only use promises in their APIs. If I need to use those packages <a href=\"https://github.com/scripting/Scripting-News/issues/177#issuecomment-643828855\">I will use</a> their promises-based API. No choice. My two cents. I wouldn't have supported this addition to the language. I much prefer tech that adds functionality in a clear understandable way. I would prefer if we could put our effort into (for example) making Dropbox work on Linux. Everywhere you look systems we depend on are in disrepair. It's like the way NYC worked when I was in high school. Burned out neighborhoods that people still live in. At some point you have to start thinking about the size and shape of the community you're serving and focus on making the language work better, not making it more complex. I still think there should be a JavaScript option to bury the synchronization functionality in the runtime, and let people write code in the natural way they do in pretty much every other language. Why JavaScript is different is something I've never heard a good answer to.",
    "created": "Mon, 15 Jun 2020 13:29:40 GMT",
    "type": "outline",
    "image": "http://scripting.com/images/2017/10/05/goldenGirlActionFigure.png"
}